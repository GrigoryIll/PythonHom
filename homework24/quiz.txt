Задание 1. Ответьте письменно на вопросы:

1)  Почему использование тестовых заглушек может быть полезным при написании модульных тестов?

2) Какой тип тестовой заглушки следует использовать, если вам нужно проверить, что метод был вызван с определенными аргументами?

3) Какой тип тестовой заглушки следует использовать, если вам просто нужно вернуть определенное значение или исключение в ответ на вызов метода?

4) Какой тип тестовой заглушки вы бы использовали для имитации  взаимодействия с внешним API или базой данных?


1. Заглушки позволяют изолировать тестируемый модуль от его зависимостей. Это позволяет избежать проблем с доступом к реальным зависимостями.
Заглушки легко настраиваются для тестовых целей и могут эмулировать различные условия, которые могут быть сложными или невозможными для воспроизведения в реальной среде.
Заглушки могут имитировать реальные внешние системы, но работать быстрее, что ускоряет выполнение тестов.

2. Мок. Мок-объекты позволяют создать фиктивный объект, который имитирует поведение реального объекта и позволяет задать ожидаемые значения аргументов при вызове метода. После выполнения теста можно проверить, был ли метод вызван с ожидаемыми аргументами.

3. Stub. Заглушки типа "stub" могут быть настроены на возвращение определенных значений или генерацию фиксированных данных для простого моделирования поведения реальных компонентов.

4. Fake. Fake заглушка может имитировать работу с базой данных или сторонним сервисом.